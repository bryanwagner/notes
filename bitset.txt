Hyperloglog:
http://antirez.com/news/75
https://en.wikipedia.org/wiki/HyperLogLog
https://engineering.fb.com/data-infrastructure/hyperloglog/
https://blog.acolyer.org/2016/03/17/hyperloglog-in-practice-algorithmic-engineering-of-a-state-of-the-art-cardinality-estimation-algorithm/
https://rollout.io/blog/counting-distinct-values-with-hyperloglog/
https://bravenewgeek.com/tag/hyperloglog/

HLL Libraries:
https://github.com/search?o=desc&p=2&q=hyperloglog&s=stars&type=Repositories
Java: https://github.com/aggregateknowledge/java-hll
Java: https://github.com/prasanthj/hyperloglog
Go: https://github.com/axiomhq/hyperloglog
Rust: https://docs.rs/pdatastructs/0.5.0/x86_64-pc-windows-msvc/pdatastructs/hyperloglog/struct.HyperLogLog.html
      https://github.com/crepererum/pdatastructs.rs
Rust: https://github.com/jedisct1/rust-hyperloglog

HLL Bench (Java): https://github.com/t3rmin4t0r/hll-perf



GCC:
https://gcc.gnu.org/releases.html
Clang vs GCC for my Linux Development project
https://stackoverflow.com/a/8208827/759719
Difference between using Makefile and CMake to compile the code
https://stackoverflow.com/a/25790020/759719
C vs C++
https://medium.com/nybles/c-vs-c-vs-c-14-a-running-time-comparision-bba9942923c3
Clang performance:
https://clang.llvm.org/features.html#performance
GCC vs Clang:
https://medium.com/@alitech_2017/gcc-vs-clang-llvm-an-in-depth-comparison-of-c-c-compilers-899ede2be378
C11 standard:
http://www.open-std.org/JTC1/SC22/WG14/www/docs/n1570.pdf
How to C in 2016:
https://matt.sh/howto-c
Linux Kernel Coding Style:
https://slurm.schedmd.com/coding_style.pdf
Modern C:
https://modernc.gforge.inria.fr/
Unit Testing C Code:
https://stackoverflow.com/a/65845/759719
Check:
https://github.com/libcheck/check
https://libcheck.github.io/check/doc/check_html/check_3.html
MinGW Getting started:
http://www.mingw.org/wiki/Getting_Started
